{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import'./App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ToDoApp=()=>{const[tasks,setTasks]=useState([]);const[newTask,setNewTask]=useState('');useEffect(()=>{fetchTasks();},[]);const addTask=async()=>{if(!newTask.trim())return;try{const response=await fetch('/api/tasks',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({task:newTask})});if(!response.ok){throw new Error(`HTTP error! Status: ${response.status}`);}const data=await response.json();setTasks([...tasks,data]);setNewTask('');}catch(error){console.error('Error adding task:',error);}};const fetchTasks=async()=>{try{const response=await axios.get('/api/tasks');setTasks(response.data);}catch(error){console.error('Error fetching tasks:',error);}};// const addTask = async () => {\n//     if (!newTask.trim()) return;\n//     try {\n//         const response = await axios.post('/api/tasks', { task: newTask });\n//         // const response = await fetch('http://localhost:5000/api/tasks', {\n//         //     method: \"POST\"\n//         //   });\n//         setTasks([...tasks, response.data]);\n//         setNewTask('');\n//     } catch (error) {\n//         console.error('Error adding task:', error);\n//     }\n// };\nconst toggleTask=async id=>{try{const response=await axios.patch(`http://localhost:3000/api/tasks/${id}`,{completed:!tasks.find(task=>task.id===id).completed});setTasks(tasks.map(task=>task.id===id?response.data:task));}catch(error){console.error('Error toggling task:',error);}};const deleteTask=async id=>{try{await axios.delete(`/api/tasks/${id}`);setTasks(tasks.filter(task=>task.id!==id));}catch(error){console.error('Error deleting task:',error);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"app-container\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"app-title\",children:\"ToDo List\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"task-input-container\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newTask,onChange:e=>setNewTask(e.target.value),placeholder:\"Add a new task\",className:\"task-input\"}),/*#__PURE__*/_jsx(\"button\",{onClick:addTask,className:\"add-button\",children:\"Add\"})]}),/*#__PURE__*/_jsx(\"ul\",{className:\"task-list\",children:tasks.map(task=>/*#__PURE__*/_jsxs(\"li\",{className:`task-item ${task.completed?'completed':''}`,children:[/*#__PURE__*/_jsx(\"span\",{onClick:()=>toggleTask(task.id),className:\"task-text\",children:task.task}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>deleteTask(task.id),className:\"delete-button\",children:\"Delete\"})]},task.id))})]});};export default ToDoApp;","map":{"version":3,"names":["React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","ToDoApp","tasks","setTasks","newTask","setNewTask","fetchTasks","addTask","trim","response","fetch","method","headers","body","JSON","stringify","task","ok","Error","status","data","json","error","console","get","toggleTask","id","patch","completed","find","map","deleteTask","delete","filter","className","children","type","value","onChange","e","target","placeholder","onClick"],"sources":["C:/Users/vladb/OneDrive/6 семемтр/ПДП/ToDoListApp_AI/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nconst ToDoApp = () => {\n    const [tasks, setTasks] = useState([]);\n    const [newTask, setNewTask] = useState('');\n\n    useEffect(() => {\n        fetchTasks();\n    }, []);\n\n\n    const addTask = async () => {\n        if (!newTask.trim()) return;\n\n        try {\n            const response = await fetch('/api/tasks', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ task: newTask }),\n            });\n\n            if (!response.ok) {\n                throw new Error(`HTTP error! Status: ${response.status}`);\n            }\n\n            const data = await response.json();\n            setTasks([...tasks, data]);\n            setNewTask('');\n        } catch (error) {\n            console.error('Error adding task:', error);\n        }\n    };\n\n    const fetchTasks = async () => {\n        try {\n            const response = await axios.get('/api/tasks');\n            setTasks(response.data);\n        } catch (error) {\n            console.error('Error fetching tasks:', error);\n        }\n    };\n\n    // const addTask = async () => {\n    //     if (!newTask.trim()) return;\n\n    //     try {\n    //         const response = await axios.post('/api/tasks', { task: newTask });\n    //         // const response = await fetch('http://localhost:5000/api/tasks', {\n    //         //     method: \"POST\"\n    //         //   });\n    //         setTasks([...tasks, response.data]);\n    //         setNewTask('');\n    //     } catch (error) {\n    //         console.error('Error adding task:', error);\n    //     }\n    // };\n\n    const toggleTask = async (id) => {\n        try {\n            const response = await axios.patch(`http://localhost:3000/api/tasks/${id}`, { completed: !tasks.find(task => task.id === id).completed });\n            setTasks(tasks.map(task => task.id === id ? response.data : task));\n        } catch (error) {\n            console.error('Error toggling task:', error);\n        }\n    };\n\n    const deleteTask = async (id) => {\n        try {\n            await axios.delete(`/api/tasks/${id}`);\n            setTasks(tasks.filter(task => task.id !== id));\n        } catch (error) {\n            console.error('Error deleting task:', error);\n        }\n    };\n\n    return (\n        <div className=\"app-container\">\n            <h1 className=\"app-title\">ToDo List</h1>\n\n            <div className=\"task-input-container\">\n                <input\n                    type=\"text\"\n                    value={newTask}\n                    onChange={(e) => setNewTask(e.target.value)}\n                    placeholder=\"Add a new task\"\n                    className=\"task-input\"\n                />\n                <button\n                    onClick={addTask}\n                    className=\"add-button\"\n                >\n                    Add\n                </button>\n            </div>\n\n            <ul className=\"task-list\">\n                {tasks.map((task) => (\n                    <li\n                        key={task.id}\n                        className={`task-item ${task.completed ? 'completed' : ''}`}\n                    >\n                        <span\n                            onClick={() => toggleTask(task.id)}\n                            className=\"task-text\"\n                        >\n                            {task.task}\n                        </span>\n                        <button\n                            onClick={() => deleteTask(task.id)}\n                            className=\"delete-button\"\n                        >\n                            Delete\n                        </button>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default ToDoApp;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}